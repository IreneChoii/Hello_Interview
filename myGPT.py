import openai
import random
import os
from dotenv import load_dotenv, find_dotenv
# -*- coding: utf-8 -*-

_ = load_dotenv(find_dotenv())
openai.api_key = os.getenv('OPENAI_API_KEY')

def get_completion(prompt, model="gpt-3.5-turbo"):
    messages = [{"role": "user", "content": prompt}]
    response = openai.chat.completions.create(
        model=model,
        messages=messages,
        temperature=0.7,
    )
    return response.choices[0].message.content

informations = [
    '자료구조 : 배열, 연결 리스트, 스택, 큐, 트리 (이진 트리, AVL 트리, 레드-블랙 트리), 그래프, 해시 테이블, 힙, 트라이, 벡터, 맵, 세트, 우선순위 큐, 디큐',
    '운영체제 : 프로세스 관리, 메모리 관리 (가상 메모리, 세그먼테이션, 페이징), 파일 시스템, 입출력 관리, 네트워킹, 보안, 스케줄링, 인터럽트 처리, 동기화, 데드락 방지',
    '소프트웨어 공학 : 요구사항 분석, 설계 (아키텍처 설계, 상세 설계), 구현, 테스팅 (단위 테스트, 통합 테스트, 시스템 테스트), 유지보수, 프로젝트 관리, 소프트웨어 개발 방법론 (폭포수 모델, 애자일), 버전 관리, 품질 보증, 소프트웨어 메트릭스',
    '컴퓨터 구조 : CPU (명령어 세트 아키텍처, 파이프라이닝, 슈퍼스칼라, 분기 예측), 메모리 계층 구조 (캐시, 주기억장치, 보조기억장치), 버스 시스템, 입출력 시스템, RISC vs CISC, 병렬 처리 (멀티코어, GPU), 인터럽트와 DMA, 가상화, SIMD, 폰 노이만 구조, 하버드 구조, 레지스터, ALU, 컨트롤 유닛, 클록 속도, 멀티스레딩, 메모리 관리 유닛 (MMU), TLB, 어드레싱 모드',
    '데이터베이스 : 관계형 데이터베이스, SQL, ACID 특성, 트랜잭션 관리, 인덱싱, 정규화 (1NF, 2NF, 3NF, BCNF), 뷰, 저장 프로시저, 트리거, 커서, 조인 (내부 조인, 외부 조인, 크로스 조인), 서브쿼리, 데이터 모델링 (ER 다이어그램), DBMS, 쿼리 최적화, 동시성 제어, 백업과 복구, NoSQL (문서형, 키-값, 칼럼 기반, 그래프), 분산 데이터베이스, 데이터 웨어하우스, OLAP vs OLTP, 데이터 마이닝, 빅데이터 처리, 샤딩, 레플리케이션, ORM, 데이터베이스 보안'
]

def get_learning():
    global informations
    combined_info = " ".join(informations)
    prompt = f'''
    당신은 컴퓨터 공학 전문가입니다. 아래의 정보를 깊이 있게 이해하고 기억하세요. 이 정보를 바탕으로 후에 면접 질문을 생성할 것입니다.

    {combined_info}

    이 정보를 완전히 이해했다면 "이해했습니다"라고 대답하세요.
    '''
    response = get_completion(prompt)
    print(response)

def first_question(count):

    cq_count=10
    
    prompt=f''' 당신은 유능한 IT 기업의 기술 면접관입니다. 앞서 학습한 컴퓨터 공학 관련 키워드를 바탕으로 만들 되, 다양한 키워드에서 다양한 질문, 심도 있는 기술 면접 질문을 {cq_count}개 생성해주세요. 출력 형식은 아래 출력 지침을 따라주되, 출력 지침에 있는 것처럼 질문들 사이에는 @@@을 반드시 붙여줘야 해. 근데 마지막 질문에는 @@@을 붙이지 말아줘!!

    질문은 다음 조건을 만족해야 합니다:

    1. 특정 개념에 대해 적당하게 깊이 있는 이해를 요구해야 합니다. 
    2. 단순 암기가 아닌 응용력을 평가할 수 있어야 합니다.
    3. 가능하다면 실제 개발 상황과 연관된 질문이어야 합니다.
    4. 질문은 직접적이고 명확해야 하며, 불필요한 설명은 제외합니다.
    5. 한국어로 질문해야 합니다.
    6. 같은 키워드의 질문이나 유사한 질문은 피해야 합니다.
    7. 매우 중요한 것은 면접자의 다양한 질문에 답변할 수 있도록 다양한 무조건 다양한 질문은 만들어줍니다.
    8. 질문개수는 {cq_count}개여야만해.

    출력 지침 :
    1.당신의 취미는 무엇입니까?@@@
    2.오늘의 날씨는 어떻습니까?@@@
    3.대학교 학교의 성적을 말씀해주세요.@@@
    4.어제 무엇을 먹었습니까?@@@
    5.태권도를 다녀보신 적이 있습니까?


    질문 형식은 면접관이 실제 질문을 하는 것 처럼 직접적으로 해야 합니다. 말투는 실제 면접관처럼 질문해주세요. 다시 한번 강조할 점은 이미 생성한 질문과 비슷한 것은 피하고, 무조건 새로운 질문을 생성해주십시오.
    '''
    checkFlag=True
    
    while checkFlag:
        
        result=get_completion(prompt)
        resultArr=result.split("@@@")
        numbercheck=True
        if len(resultArr)!=10:
            continue
        for i in range(cq_count):
            resultArr[i]=resultArr[i].strip()# 1. , 2. , 3.
            if resultArr[i].startswith(str(i+1)+'.') == False:
                numbercheck=False
                break
            resultArr[i]=resultArr[i].replace(str(i+1)+'.',"")

        if numbercheck==False:
            continue

        break

    numbers = random.sample(range(0, cq_count), count)

    realQuestion=[]
    for i in numbers:
        realQuestion.append(resultArr[i])
    
    return realQuestion
 

def analysis_answer(question, answer):
    print("질문 : ",question)
    print("대답 : ",answer)

    if answer=='음성을 인식할 수 없습니다.' or answer=="음성을 인식할 때 에러가 발생했습니다.":
        return '대답 분석을 할 수 없음.'
    answerLen=len(answer)
    flag=False
    #40자 이하면 성의 없는 대답으로 간주한다.
    if answerLen<40:
        flag=False
    else:
        flag=True
    print(flag)
    print(answerLen,'문자길이')
    prompt=""

    if flag:
        prompt=f'''
            당신은 경험 많은 기술 면접 코치입니다. 아래 질문에 대한 면접자의 답변을 분석하고, 
            상황에 맞는 피드백을 제공해주세요. 면접자는 당신의 분석 결과를 가지고 면접을 준비할 것입니다. 
            당신은 면접자가 면접을 잘 볼 수 있도록 도와주는 역할을 해야합니다. 단, 답변의 오타가 있을 경우, 오타는 지적해주지 않아야 합니다.
            가장 주의깊게 봐야할 점은 면접 질문에 면접자의 대답이 올바른 대답인지 확인해주어야 합니다.
            
            아래 지침에 맞도록 답변을 해주고, 모범 사례를 참고해서 분석해주세요.
       
            
            면접 질문: {question}
            면접자의 답변: {answer}

            답변 분석 지침:

            강점:
            - (사용자의 답변 중 강점인 부분)
            - (필요시 추가)
            
            개선 필요 사항:
            - (개선 사항 1)
            - (필요시 추가)
            
            모범 답안:
            (간결하고 정확한 모범 답안 제시)
            
            추가 조언:
            (면접자에게 도움이 될 만한 추가적인 조언이나 팁)
            


            모범 사례

            
            강점:

            정규화의 주요 목적인 데이터 중복 최소화와 무결성 보장을 정확히 언급했습니다.
            정규화의 여러 이점(일관성 유지, 갱신 이상 방지, 구조의 유연성 등)을 포괄적으로 설명했습니다.
            정규화가 데이터베이스 관리, 성능, 저장 공간 절약 등에 미치는 영향을 잘 설명했습니다.
            정규화의 중요성을 데이터베이스 설계의 핵심 원칙으로 강조했습니다.

            개선 필요 사항:

            정규화의 구체적인 단계나 예시를 언급하지 않았습니다.
            정규화의 단점이나 과도한 정규화의 위험성에 대해 언급하지 않았습니다.

            모범 답안:
            "데이터베이스 정규화의 주요 목적은 데이터 중복을 최소화하고 데이터의 일관성과 무결성을 보장하는 것입니다. 정규화를 통해 갱신 이상을 방지하고, 데이터 구조의 유연성을 높이며, 저장 공간을 절약할 수 있습니다. 예를 들어, 1NF, 2NF, 3NF 등의 단계를 거치면서 점진적으로 데이터를 구조화합니다. 이는 데이터베이스의 효율성, 확장성, 유지보수성을 향상시킵니다. 그러나 과도한 정규화는 조인 연산의 증가로 성능 저하를 초래할 수 있으므로, 적절한 수준의 정규화가 중요합니다."

            추가 조언:
            정규화의 구체적인 예시나 실제 데이터베이스 설계 경험을 언급하면 답변의 신뢰도가 높아질 것입니다.
            정규화의 장단점을 균형 있게 설명하고, 실제 프로젝트에서 어떻게 적용했는지 사례를 들면 좋습니다.
            면접관이 추가 질문을 할 수 있으므로, 각 정규화 단계(1NF, 2NF, 3NF 등)에 대해 간단히 설명할 수 있도록 준비하세요.
            데이터베이스 성능 최적화와 정규화 사이의 균형에 대해 생각해보고, 이에 대한 견해를 준비하면 좋을 것 같습니다.
            '''
    else:
        prompt = f'''
        당신은 경험 많은 기술 면접 코치입니다. 현재 면접자의 답변이 매우 짧거나 불성실한 경우입니다. 
        단, 답변의 오타가 있을 경우, 오타는 지적해주지 않아야 합니다.
        당신은 다음에 사용자가 다시 답변했을 때 올바르게 답할 수 있도록 도와주는 역할입니다. 또한 면접자의 잘못된 태도를 분석해줘야하므로 
        솔직하게 잘못된 부분,잘못된 태도, 나쁜 부분을 지적해주세요. 당신은 경험 많은 기술 면접 코치로서 다양한 면접 기술 경험을 토대로 면접자에게 도움을 주십시오. 

        아래 지침에 맞도록 답변을 분석해주고, 모범 사례를 참고하여 분석해주세요.
            
        
    

        면접 질문: {question}
        면접자의 답변: {answer}

        답변 분석 지침:
        답변 평가:
        (답변의 문제점 간단히 설명)
        
        개선 방향:
        - (어떻게 대답을 개선할 수 있을지 조언)
        - (관련 지식을 어떻게 습득할 수 있는지 제안)
        
        대안 답변 예시:
        (면접자가 사용할 수 있는 간단하고 적절한 대답 예시 제공)
        


        모범 사례

        답변 분석:
        강점:

        없음

        개선 필요 사항:

        질문에 대한 적절한 답변을 하지 않았습니다.
        전문성과 성실성이 결여된 태도를 보였습니다.
        기술 면접에서 요구되는 기본적인 예의와 태도를 지키지 않았습니다.

        모범 답안:
        "데이터베이스 정규화의 주요 목적은 데이터 중복을 최소화하고 데이터의 일관성과 무결성을 보장하는 것입니다. 정규화를 통해 갱신 이상을 방지하고, 데이터 구조의 유연성을 높이며, 저장 공간을 절약할 수 있습니다. 정규화는 데이터베이스의 효율성, 확장성, 유지보수성을 향상시키는 중요한 과정입니다. 예를 들어, 1NF, 2NF, 3NF 등의 단계를 거치면서 데이터를 구조화하여 이러한 목표를 달성합니다."
        추가 조언:

        면접에서의 태도와 예의의 중요성을 인식하세요. 부적절한 답변은 기술적 능력과 무관하게 부정적인 인상을 줄 수 있습니다.
        질문에 대해 모르거나 불확실한 경우, 정직하게 모른다고 말하고 배울 의지를 보이는 것이 좋습니다. 예를 들어, "죄송합니다. 이 부분에 대해 잘 모르겠습니다. 하지만 배울 의지가 있으며, 면접 후에 더 공부하겠습니다."라고 말할 수 있습니다.
        기술 면접 준비를 철저히 하세요. 데이터베이스와 같은 핵심 주제에 대해 기본적인 이해는 필수적입니다.
        스트레스 상황에서도 침착함을 유지하는 연습을 하세요. 실제 면접에서 긴장하더라도 전문적인 태도를 유지할 수 있어야 합니다.
        면접 전에 해당 회사와 직무에 대해 충분히 조사하고, 왜 그 직무에 지원했는지 명확한 이유를 준비하세요. 이는 당신의 진정성과 열정을 보여줄 수 있는 기회입니다.
        기술적 지식뿐만 아니라 의사소통 능력, 팀워크, 문제 해결 능력 등 소프트 스킬의 중요성도 인식하세요. 이러한 능력들도 면접에서 중요하게 평가됩니다.
        '''

    return get_completion(prompt)

def analysis_video(comfortableRatio,uncomfortableRatio,hand,head,face,arm,handtouch,shoulder):
    prompt = f"""면접 영상 분석 결과를 바탕으로 피드백을 제공하겠습니다.
    전체 면접 태도 분석:
    - 편안한 태도: {comfortableRatio:.2f}%
    - 불편한 태도: {uncomfortableRatio:.2f}%

    불편한 태도 세부 분석:
    1. 팔이나 손 움직임: {hand:.2f}%
    2. 머리 만지기: {head:.2f}%
    3. 얼굴 만지기: {face:.2f}%
    4. 팔짱 끼기: {arm:.2f}%
    5. 양손 모으기 및 만지기: {handtouch:.2f}%
    6. 팔쪽이나 어깨 만지기: {shoulder:.2f}%

    이 데이터를 바탕으로, 아래 지침에 맞도록 피드백을 제고해줘, 특히 아래 모범 사례를 참고해서 작성해줘.

    지침 :

    면접 영상 분석 결과

    ● 전체 태도 평가:
    편안한 태도가 {comfortableRatio:.2f}%, 불편한 태도가 {uncomfortableRatio:.2f}%로 나타났습니다. 
    [불편한 태도가 30% 이상일 경우] 불편한 태도의 비율이 다소 높게 나타났으므로, 개선의 여지가 있습니다.
    [불편한 태도가 30% 미만일 경우] 전반적으로 안정적인 태도를 보여주었습니다.

    ● 불편한 태도 세부 분석:
    가장 두드러진 불편한 태도:
    a. [가장 높은 비율의 항목]: 해당항목%
        - 이 행동이 주는 인상과 개선 방법 제시
    b. [두 번째로 높은 비율의 항목]: 해당 항목%
        - 이 행동이 주는 인상과 개선 방법 제시
    (10% 이상인 항목에 대해 계속)

    ● 긍정적인 측면:
    - 편안한 태도의 비율이 높다면 이를 칭찬
    - 특정 불편한 태도의 비율이 낮다면 이를 긍정적으로 평가

    ● 전반적인 인상 평가:
    전체적인 면접 태도에 대한 종합적인 평가 제공

    ● 개선을 위한 실천적 조언:
    - 거울을 보며 연습하기
    - 친구나 가족 앞에서 모의 면접 해보기
    - 영상 촬영을 통한 자가 피드백
    - 특정 문제 행동 개선을 위한 구체적인 연습 방법

    ● 마무리 멘트:
    "이번 분석 결과를 바탕으로 개선점에 집중하여 연습한다면, 다음 면접에서 더욱 안정적이고 전문적인 모습을 보여줄 수 있을 것입니다. 당신의 능력을 충분히 발휘할 수 있는 기회가 되기를 바랍니다. 화이팅!"

    모범 사례:
    면접 영상 분석 결과

    ● 전체 태도 평가:
    편안한 태도가 17%, 불편한 태도가 83%로 나타났습니다. 
    불편한 태도의 비율이 매우 높게 나타났으므로, 상당한 개선이 필요합니다.

    ● 불편한 태도 세부 분석:
    가장 두드러진 불편한 태도:
    a. 팔이나 손 움직임: 40%
    - 이 행동은 긴장과 불안감을 나타낼 수 있습니다. 면접관에게 집중력이 부족하거나 자신감이 없어 보일 수 있습니다. 개선을 위해 손을 테이블 위에 가볍게 올려놓거나, 무릎 위에 편안히 두는 연습을 해보세요.

    b. 머리 만지기: 20%
    - 이 행동은 불안감이나 집중력 부족을 나타낼 수 있습니다. 면접관에게 산만해 보일 수 있으며, 질문에 집중하지 못한다는 인상을 줄 수 있습니다. 머리를 만지는 대신 깊게 호흡하는 연습을 해보세요.

    c. 팔짱 끼기: 20%
    - 이 자세는 방어적이거나 폐쇄적인 태도로 보일 수 있습니다. 면접관과의 소통을 방해할 수 있으므로, 대신 손을 편안히 무릎 위에 올려놓는 연습을 해보세요.

    d. 양손 모으기 및 만지기: 10%
    - 이 행동은 불안감을 나타낼 수 있습니다. 대신 손을 편안히 펴고 안정된 자세를 유지하는 연습을 해보세요.

    e. 팔쪽이나 어깨 만지기: 10%
    - 이 행동도 불안감이나 불편함을 나타낼 수 있습니다. 어깨의 긴장을 풀고 바른 자세를 유지하는 연습을 해보세요.

    ● 긍정적인 측면:
    - 얼굴 만지기 행동이 0%로 나타난 것은 긍정적입니다. 이는 면접 중 얼굴을 건드리지 않고 집중력을 유지했다는 것을 의미합니다.

    ● 전반적인 인상 평가:
    전체적으로 매우 불안하고 긴장된 태도를 보였습니다. 특히 손과 팔의 움직임이 과도하게 나타나, 안정감 있는 태도를 보여주지 못했습니다. 이는 면접관에게 자신감 부족으로 비춰질 수 있으며, 전문성과 준비도에 대한 의구심을 줄 수 있습니다.

    ● 개선을 위한 실천적 조언:
    - 거울을 보며 연습하기: 특히 손과 팔의 위치에 주의를 기울이세요.
    - 친구나 가족 앞에서 모의 면접 해보기: 피드백을 받아 불필요한 동작을 인지하고 개선하세요.
    - 영상 촬영을 통한 자가 피드백: 특히 팔이나 손 움직임, 머리 만지기, 팔짱 끼기 등의 행동을 주의 깊게 관찰하세요.
    - 명상이나 호흡 운동을 통해 긴장을 완화하는 연습을 하세요.
    - 면접 전 스트레칭으로 신체적 긴장을 풀어주세요.

    ● 마무리 멘트:
    "이번 분석 결과를 바탕으로 개선점에 집중하여 연습한다면, 다음 면접에서 더욱 안정적이고 전문적인 모습을 보여줄 수 있을 것입니다. 특히 손과 팔의 움직임을 줄이고, 전반적인 긴장 완화에 집중해보세요. 당신의 능력을 충분히 발휘할 수 있는 기회가 되기를 바랍니다. 꾸준한 연습으로 반드시 좋은 결과가 있을 것입니다. 화이팅!"
    """
    return get_completion(prompt)

get_learning()



